// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/tatleung/gotut/swaggertut/models"
)

// GetUserByNameReader is a Reader for the GetUserByName structure.
type GetUserByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserByNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserByNameOK creates a GetUserByNameOK with default headers values
func NewGetUserByNameOK() *GetUserByNameOK {
	return &GetUserByNameOK{}
}

/*GetUserByNameOK handles this case with default header values.

successful operation
*/
type GetUserByNameOK struct {
	Payload *models.User
}

func (o *GetUserByNameOK) Error() string {
	return fmt.Sprintf("[GET /user/{username}][%d] getUserByNameOK  %+v", 200, o.Payload)
}

func (o *GetUserByNameOK) GetPayload() *models.User {
	return o.Payload
}

func (o *GetUserByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserByNameBadRequest creates a GetUserByNameBadRequest with default headers values
func NewGetUserByNameBadRequest() *GetUserByNameBadRequest {
	return &GetUserByNameBadRequest{}
}

/*GetUserByNameBadRequest handles this case with default header values.

Invalid username supplied
*/
type GetUserByNameBadRequest struct {
}

func (o *GetUserByNameBadRequest) Error() string {
	return fmt.Sprintf("[GET /user/{username}][%d] getUserByNameBadRequest ", 400)
}

func (o *GetUserByNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUserByNameNotFound creates a GetUserByNameNotFound with default headers values
func NewGetUserByNameNotFound() *GetUserByNameNotFound {
	return &GetUserByNameNotFound{}
}

/*GetUserByNameNotFound handles this case with default header values.

User not found
*/
type GetUserByNameNotFound struct {
}

func (o *GetUserByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /user/{username}][%d] getUserByNameNotFound ", 404)
}

func (o *GetUserByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
